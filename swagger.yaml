openapi: 3.0.0
info:
  title: Paziresh24 web services document
  version: '1.0'
  description: Health system platform to connect patients to providers
  termsOfService: https://www.paziresh24.com/home/rules/
  contact:
    email: info@paziresh24.com
    name: paziresh24
    url: https://www.paziresh24.com
servers:
  - url: https://apigw.paziresh24.com
    variables: {}
paths:
  /v1/providers:
    get:
      summary: get providers information
      description: ''
      operationId: getProviderInfo
      parameters:
        - name: user_id
          description: Uniqe identifier of any users
          schema:
            $ref: '#/components/schemas/user/properties/user_id'
          in: query
      responses:
        '200':
          description: Normal response to fetch a provider
          content:
            application/json:
              schema:
                properties:
                  providers:
                    nullable: false
                    type: array
                    items:
                      $ref: '#/components/schemas/provider'
      tags:
        - Providers
    patch:
      summary: Update provider fields
      description: ''
      operationId: user_id
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                biography:
                  $ref: '#/components/schemas/provider/properties/biography'
                employee_id:
                  $ref: '#/components/schemas/provider/properties/employee_id'
      responses:
        '204':
          $ref: '#/components/responses/204'
      tags:
        - Providers
    post:
      summary: Store a provider
      description: ''
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                slug:
                  $ref: '#/components/schemas/provider/properties/slug'
                employee_id:
                  $ref: '#/components/schemas/provider/properties/employee_id'
                user_id:
                  $ref: '#/components/schemas/provider/properties/user_id'
      responses:
        '201':
          $ref: '#/components/responses/201'
      tags:
        - Providers
  /v1/memberships:
    summary: Relational record between users and centers
    get:
      summary: Get membership records
      description: ''
      operationId: getMembershipInfo
      parameters:
        - name: user_id
          schema:
            $ref: '#/components/schemas/user/properties/user_id'
          in: query
      responses:
        '200':
          description: Get membership records
          content:
            application/json:
              schema:
                properties:
                  memberships:
                    nullable: false
                    type: array
                    items:
                      $ref: '#/components/schemas/membership'
      tags:
        - Memberships
    post:
      summary: 'Insert membership record '
      description: Link a user from other platforms to a provider profile
      operationId: insertMembership
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/membership'
      responses:
        '201':
          $ref: '#/components/responses/201'
      tags:
        - Memberships
  /v1/memberships/{center_id}/{user_id}:
    summary: remove a membership
    delete:
      description: >-
        Delete connection between user of other platforms and provider's profile
        in paziresh24
      operationId: deleteMembership
      parameters:
        - name: user_id
          in: path
          schema:
            $ref: '#/components/schemas/user/properties/user_id'
          required: true
        - name: center_id
          in: path
          schema:
            $ref: '#/components/schemas/membership/properties/center_id'
          required: true
      responses:
        '204':
          $ref: '#/components/responses/204'
      tags:
        - Memberships
  /v1/provider_specialities:
    get:
      summary: Get list of provider's specialities
      parameters:
        - name: provider_id
          schema:
            $ref: '#/components/schemas/provider/properties/id'
          in: query
      responses:
        '200':
          description: Get list of provider's specialities
          content:
            application/json:
              schema:
                properties:
                  provider_specialities:
                    nullable: false
                    type: array
                    items:
                      $ref: '#/components/schemas/provider_speciality'
      tags:
        - Specialities
    post:
      summary: Store list of specialities alongside academic degree for a provider
      description: ''
      requestBody:
        content:
          application/json:
            schema:
              type: array
              items:
                $ref: '#/components/schemas/provider_speciality'

      responses:
        '204':
          $ref: '#/components/responses/204'
      tags:
        - Specialities
tags:
  - name: Providers
  - name: Users
  - name: Memberships
  - name: Specialities
components:
  schemas:
    user:
      description: user information
      properties:
        user_id:
          nullable: false
          description: uniqe identifier of any user
          example: 123
          type: integer
    provider:
      description: provider information
      properties:
        id:
          nullable: false
          title: provider id
          type: integer
          example: 1234
        biography:
          nullable: true
          title: provider biography
          type: string
          example: This is a example test biography
        user_id:
          $ref: '#/components/schemas/user/properties/user_id'
        employee_id:
          description: >-
            uniqe identifer of any provider related to his/her job (ex: for
            doctors is medical code)
          type: string
          example: 1234567890
        job_title:
          description: job title of provider
          enum:
            - doctor
          type: string
          example: doctor
        prefix:
          description: >-
            prefix of provider according to his/her job  (ex: for doctors is
            دکتر)
          type: string
          example: دکتر
        slug:
          description: >-
            Provider slug profile (ex: دکتر-محمدی is accessible from this url https://paziresh24.com/dr/دکتر-محمدی)
          type: string
          example: دکتر
    membership:
      description: Relational record between users and centers
      properties:
        user_id:
          $ref: '#/components/schemas/user/properties/user_id'
        center_id:
          description: Identifier of center (facilities that providers work on)
          example: 9876
          type: string
        booking_link:
          description: Base url of booking APIs for provider in the center
          type: string
          example: https://panel.paziresh24.com/api/v2/user-centers/1234
    provider_speciality:
      description: Speciality of a provider
      properties:
        speciality:
          $ref: '#/components/schemas/speciality'
        academic_degree:
          $ref: '#/components/schemas/academic_degree'
    speciality:
      description: >-
        Specialities which are supported and providers can choose from them, for example:  بهداشت روان، بیوشیمی بالینی
      properties:
        id:
          nullable: false
          title: Speciality id
          type: integer
          example: 1234
        title:
          nullable: true
          title: Title of speciality
          type: string
          example: بهداشت روان
    academic_degree:
      description: >-
        Academic degree which are supported and providers can choose from them, for example: کارشناس، متخصص
      properties:
        id:
          nullable: false
          title: Academic degree id
          type: integer
          example: 1234
        title:
          nullable: true
          title: Title of an academic degree
          type: string
          example: کارشناسی ارشد
  responses:
    '201':
      description: Record inserted successfully
    '204':
      description: No Content (request was successfully executed)
